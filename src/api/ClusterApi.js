/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SendPostApi) {
      root.SendPostApi = {};
    }
    root.SendPostApi.ClusterApi = factory(root.SendPostApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * Cluster service.
   * @module api/ClusterApi
   * @version 1.0.0
   */

  /**
   * Constructs a new ClusterApi. 
   * @alias module:api/ClusterApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the clusterRouterDeleteItemFromCacheOfEveryNodeInCluster operation.
     * @callback module:api/ClusterApi~clusterRouterDeleteItemFromCacheOfEveryNodeInClusterCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete item from cache of every node in cluster
     * @param {String} xSystemApiKey System API Key
     * @param {Object} opts Optional parameters
     * @param {String} opts.name cache name
     * @param {String} opts.key cache item key to delete
     * @param {module:api/ClusterApi~clusterRouterDeleteItemFromCacheOfEveryNodeInClusterCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.clusterRouterDeleteItemFromCacheOfEveryNodeInCluster = function(xSystemApiKey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'xSystemApiKey' is set
      if (xSystemApiKey === undefined || xSystemApiKey === null) {
        throw new Error("Missing the required parameter 'xSystemApiKey' when calling clusterRouterDeleteItemFromCacheOfEveryNodeInCluster");
      }


      var pathParams = {
      };
      var queryParams = {
        'name': opts['name'],
        'key': opts['key'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-System-ApiKey': xSystemApiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/cluster/cache', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the clusterRouterDeleteItemFromCacheOfSpecificNodeInCluster operation.
     * @callback module:api/ClusterApi~clusterRouterDeleteItemFromCacheOfSpecificNodeInClusterCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete item from cache of specific node in cluster
     * @param {String} xSystemApiKey System API Key
     * @param {Object} opts Optional parameters
     * @param {String} opts.name cache name
     * @param {String} opts.key cache item key to delete
     * @param {module:api/ClusterApi~clusterRouterDeleteItemFromCacheOfSpecificNodeInClusterCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.clusterRouterDeleteItemFromCacheOfSpecificNodeInCluster = function(xSystemApiKey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'xSystemApiKey' is set
      if (xSystemApiKey === undefined || xSystemApiKey === null) {
        throw new Error("Missing the required parameter 'xSystemApiKey' when calling clusterRouterDeleteItemFromCacheOfSpecificNodeInCluster");
      }


      var pathParams = {
      };
      var queryParams = {
        'name': opts['name'],
        'key': opts['key'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-System-ApiKey': xSystemApiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/cluster/cache/node', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
